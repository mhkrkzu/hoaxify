import authReducer from "./AuthReducer";import {applyMiddleware, compose, createStore,} from "redux";import SecureLS from "secure-ls";import thunk from "redux-thunk";import {setAuthorisationHeader} from "../api/apiCalls";const secureLs = new SecureLS()const getStateFromStorage = () => {    const hoaxAuth = secureLs.get('hoax-auth');    let stateInLocalStorage = {        isLoggedIn: false,        username: undefined,        displayName: undefined,        image: undefined,        password: undefined    }    if (hoaxAuth) {        return hoaxAuth;    }    return stateInLocalStorage;}const updateStateInStorage = newState => {    secureLs.set('hoax-auth', newState);}const configureStore = () => {    const initialState = getStateFromStorage();    setAuthorisationHeader(initialState)    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;    const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));    store.subscribe(() => {        updateStateInStorage(store.getState());        setAuthorisationHeader(store.getState());    })    return store;}export default configureStore;